/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 phantoms.glb --transform
*/

import React, { useRef, useLayoutEffect } from 'react'
import { useGLTF,useScroll } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import gsap from 'gsap';
export function Robot(props) {
  const { nodes, materials } = useGLTF('./models/robot/phantoms-transformed.glb')
  const phantom = useRef();
  const scroll = useScroll()
  const tl = useRef()

  useFrame((state, delta)=>{
    tl.current.seek(scroll.offset * tl.current.duration())
    // phantom.current.rotation.y+=delta
  })

  useLayoutEffect(()=> {
    tl.current = gsap.timeline({defaults: {duration: 2, ease: 'power1.inOut'}})

    tl.current
    .to(phantom.current.rotation, {y: -1}, 2)
    .to(phantom.current.position, {x: 1}, 2)

    .to(phantom.current.rotation, {y: 1}, 6)   
    .to(phantom.current.position, {x: -2}, 6)

    .to(phantom.current.rotation, {y: 0}, 11)
    .to(phantom.current.rotation, {x: 1}, 11)
    .to(phantom.current.position, {x: 0}, 11)

    .to(phantom.current.rotation, {y: 0}, 13)
    .to(phantom.current.rotation, {x: -1}, 13)    
    .to(phantom.current.position, {x: 0}, 13)

    .to(phantom.current.rotation, {y: 0}, 16)   
    .to(phantom.current.rotation, {x: 0}, 16) 
    .to(phantom.current.position, {x: 0}, 16)    

    .to(phantom.current.rotation, {y: 0}, 20)   
    .to(phantom.current.rotation, {x: 0}, 20) 
    .to(phantom.current.position, {x: 0}, 20)   

  },[])


  return (
    <group ref={phantom} {...props} dispose={null}>
      {/* <mesh geometry={nodes.Cylindre005.geometry} material={nodes.Cylindre005.material} position={[-0.02, 2.75, -0.07]} rotation={[-Math.PI, 0, 0]} scale={0.58} />
      <mesh geometry={nodes.Plan002.geometry} material={nodes.Plan002.material} position={[-0.39, 0.47, 0.1]} rotation={[Math.PI / 2, 0, 0]} scale={0.42} /> */}
      <group position={[-0.21, 0.16, 0.37]} rotation={[0, -0.15, 0]} scale={0.15}>
        <mesh geometry={nodes.Cube003.geometry} material={materials.Metal} >
          <meshPhysicalMaterial
            color="#aaa"
            roughness={0.2}
            metalness={1}
            reflectivity={0.5}
            iridescence={0.3}
            iridescenceIOR={1}
            iridescenceThicknessRange={[100,1000]}
          />
          </mesh>
        <mesh geometry={nodes.Cube003_1.geometry} material={materials.Metal} >
        <meshPhysicalMaterial
        color="#000000"
        emissive={'#000'}
            roughness={0.2}
            clearcoat={1}
            metalness={0}
            reflectivity={0.2}
            iridescence={0.1}
            iridescenceIOR={1}
            iridescenceThicknessRange={[100,1000]}
            />
          </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('./models/robot/phantoms-transformed.glb')
